{"version":3,"file":"static/css/main.7f33412b.css","mappings":"AAIA,iBAGE,sBAGF,qCAYE,gBAHA,SACA,SAEA,CAGF,4BAEE,gBAGF,kBACE,uBAGF,KAGE,gBADA,iBADA,4BAEA,CAGF,YAGE,cADA,cACA,CAGF,6BAIE,aAIF,sCACE,kBACE,qBAGF,iBAGE,8EACA,oFAEA,+BADA,mCACA,EC7DJ,MAEE,sBAAuB,CACvB,uBAAwB,CACxB,qBAAsB,CAEtB,iBAAkB,CAClB,gBAAiB,CACjB,eAAgB,CAChB,aAAc,CACd,gBAAiB,CACjB,aAAc,CACd,iBAAkB,CAClB,qBAAsB,CACtB,oBAAqB,CACrB,kBAAmB,CACnB,kBAAmB,CACnB,0BAA2B,CAC3B,kBAAmB,CACnB,0CAA2C,CAC3C,0CAA2C,CAC3C,4CAA6C,CAM/C,sCAGE,2CADA,wBADA,eAEA,CACA,yEACE,sDAIJ,KAGE,MAAK,CAFL,eACA,KACA,CAGF,iCAGE,MAAK,CAFL,kBACA,KACA,CAGF,KACE,aACA,YAGF,KACE,UACA,6BAGF,yBAUE,YAFA,eAPA,cAGA,0CACA,gBAHA,iBAKA,gBAJA,kBAGA,kBAGA,uDACA,CCnEF,WACE,kBACA,mEAIA,qEAIA,mKAIA,gBAEF,uBACE,6EAUA,UAOA,kBACA,CAOA,QACA,CAZA,UACA,YACA,gBACA,CAFA,UAJA,iBAEA,CAKA,kBAOA,CAZA,SAaA,MAGA,iFAGE,CALF,YACA,uBACA,CAFA,UAKE,sBACA,YACE,eACA,iEAGA,eAGJ,WACE,iBAOJ,iBACE,CAPE,cAOF,OAEA,kBAEA,uBACA,CAHA,gBAwBA,eACE,CAtBF,iBAqBA,CA1BA,iDA2BE,8FACA,yCAKF,YC2dE,wJD7cJ,WACE,SACA,SAMA,6DACA,CAFA,4EACA,CACA,qEAGE,CAPF,uCAEA,CAFA,OAFA,cACA,CACA,iBAEA,UAKE,mBAEA,mBADA,YACA,8BAEA,eACE,wBACA,yCACE,4CAGJ,CACE,wBAEA,kBACA,CAFA,YACA,CACA,iBAEA,sCAQE,qDACA,CAPA,oBACA,CAMA,kBACA,uBACA,gBACA,CAPA,aACA,CAOA,gBAPA,cAMA,iBACA,CATA,oBACA,CAEA,+DACA,CAFA,yBACA,CAJA,iBAUA,oCAQE,2EACA,CAFA,WALA,UACA,CAGA,UACA,QAJA,iBAEA,CAEA,+DACA,CACA,4HAGF,CAPE,UAOF,oCACE,0CACA,0CACE,uDCqZR,yBD7YI,wBACA,kBACA,yCAQR,kBAGE,OAKA,eALA,aAGA,aACA,iBACA,CAGA,cACA,QACA,gFAEE,CAPF,0BAEA,CAJA,UACA,CAMA,SAEE,WACA,oBAEA,YAGA,SAFA,iBAEA,oEACA,CAJA,UAIA,kCAME,2EACA,CAFA,UACA,YACA,4HAGA,CAJA,UAIA,+EAIA,4EAGA,8CAEE,2EAMJ,oFAGE,0DAEE,2EAGA,oDAEF,uBACE,8ECyUJ,yBDlUA,iBAKJ,CACE,iBACA,OAYA,qBAPA,6DACA,CAFA,4EACA,CASA,qEAGE,CARF,YACA,sBAEA,CACA,uDACA,CAbA,sBACA,CAUA,mFACA,CAPA,0TAGA,CALA,oBAaE,SAIA,YAJA,2EAIA,WAEA,eACE,mBAIA,qDACA,CAJA,6BACA,wBAEA,qBAFA,+DAGA,CACE,kEAIF,uBCyRF,wCDnRA,iBAKJ,kBACE,EACA,MAGA,qDAGE,CALF,YACA,CACA,gBAHA,iBACA,CACA,iBAIE,YACA,0BACA,mBACA,CAFA,gBAEA,+FASA,gBAJE,6DAIF,iCAEE,eACA,uBAKN,cAEE,oGACA,yBAKA,MAGA,oBAKA,iBARA,aACA,gBAOA,mDAOE,UAEA,kBACA,CAHA,YACA,sBACA,CACA,eACE,YACA,oBACE,eAEF,gBAEE,wBACA,cAGA,6DAKJ,aACE,YAGA,YACA,CAHA,eACA,CAEA,iBACE,CAHF,WAGE,gBAKA,mBAFA,aACA,CAHA,2BACA,oBACA,CACA,aACA,CAJA,iBAIA,oHAGE,kDC0LN,8CDnLE,SAGA,sBAGA,CALA,gDAKA,YACE,SAOR,WACE,8DAGE,kEAIA,YAEA,iCADA,aACA,2BAEE,CAHF,mEACA,CADA,UAGE,oBAMA,gBACE,CAJF,yCACA,qBAFA,WACA,CACA,gHAEA,CALA,qBAME,sBAEA,aAEF,cAHE,gBAGF,0BACE,mBAGF,aACE,wBAGA,2EAEA,CAFA,kBAFA,UACA,CAGA,aAHA,qBAGA,6BAIE,2EAUR,CAZQ,iBAEA,uBAUR,8FACA,sDACA,+BAGE,wFACA,yCAOF,mDAGE,mEAGE,oEAKJ,UAIA,mEAEE,CAJF,qDACA,CADA,gBADA,iBACA,CACA,8BAGE,iBAKA,kBACE,CAFF,YACA,CAFA,WACA,CAHA,iBAEA,WAGE,qBACA,2BAIJ,oBACE,CANE,oNAMF,wFAEA,sBACA,aACE,uBAEA,0CAEF,CAJE,eACA,uBACA,gBAEF,0BACE,qDACA,mBACA,uBAEF,iBACE,wBACA,YACA,6CACE,6EAEA,CACA,0CAGJ,CAHI,sBADA,WAIJ,CAEE,wBAEA,8EAEF,CAHE,eACA,aAEF,0BACE,0BAEA,gDACE,mDAEA,0DACE,mDAON,qFAEE,2BACE,4BC8BJ,+CDvBI,mBAGA,WAEA,mBAHA,SAIE,wBAKJ,gBACE,CALE,UAKF,uBAIF,SACE,oBAEA,QAEA,kBACE,wBAKJ,gBACE,CALE,UAKF,uBACA,WACA,iBACA,uCACE,wBASR,qDAGE,4DAKA,WAGA,cAHA,aAGA,QACA,CAHA,6DAEA,CAHA,yDACA,CAGA,iBACE,gBAMA,gFACA,oEAEA,CALA,sBAFA,WACA,CAFA,YACA,CAOA,kDACA,mQAGE,iCAVF,YACA,8BAaI,CAJF,iBAEA,yFAEE,CAIA,6FACA,0BACE,qDAKJ,kBACA,cACE,0EACA,gBAGJ,uBACE,sCACA,uBAEF,cACE,kBAEA,qBACE,oGACA,CAGA,iBACA,CAJA,0CAEA,CAEA,oBACA,gBAIJ,uBACE,CALE,oBAHA,gBAQF,sBACA,8EACA,sEAEA,CAJA,6DAIA,0BACE,qDASR,oDAIE,4DAIA,CACA,WAKF,sBACE,CANA,YACA,sBACA,uBAIA,2BACA,uBAEF,CAEE,wBAIA,2EACA,yCAEA,CAJA,eACA,CAFA,iBACA,CACA,qBAGA,wGAGE,CAVF,gDACA,kBASE,6EACA,CAFK,aAEL,6BACA,mEACA,6BCnIF,8CDyIE,WAIF,kBAQJ,CAXM,gDAWN,SACE,mBAGA,gEAGE,CALF,mEAEA,CAHA,6CAME,iBAGA,2DAEA,CAJA,YACA,sBACA,CAEA,cACE,qBAGJ,WACE,eAEA,YACA,uBACE,CAFF,UAEE,uEAGE,+DC7KJ,yBDoLE,gBACA,gDAGA,yCAIF,CACE,UACA","sources":["sass/base/reset.scss","sass/variables/vars.scss","sass/style.scss","sass/base/breakpoints.scss"],"sourcesContent":["/************************/\n/*        RESET        */\n/**********************/\n\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\nbody,\nh1,\nh2,\nh3,\nh4,\nh5,\np,\nfigure,\npicture {\n  margin: 0;\n  padding: 0;\n  // regular fonts\n  font-weight: 400;\n}\n\nul[role=\"list\"],\nol[role=\"list\"] {\n  list-style: none;\n}\n\nhtml:focus-within {\n  scroll-behavior: smooth;\n}\n\nbody {\n  text-rendering: optimizeSpeed;\n  min-height: 100vh;\n  line-height: 1.5;\n}\n\nimg,\npicture {\n  max-width: 100%;\n  display: block;\n}\n/* make form elements consistant */\ninput,\nbutton,\ntextarea,\nselect {\n  font: inherit;\n}\n\n/* Remove all animations, transitions and smooth scroll for people that prefer not to see them */\n@media (prefers-reduced-motion: reduce) {\n  html:focus-within {\n    scroll-behavior: auto;\n  }\n\n  *,\n  *::before,\n  *::after {\n    animation-duration: 0.01ms !important;\n    animation-iteration-count: 1 !important;\n    transition-duration: 0.01ms !important;\n    scroll-behavior: auto !important;\n  }\n}\n","/************************/\n/*      VARIABLES      */\n/**********************/\n\n:root {\n  // colors\n  --clr-dark: 235 21% 21%;\n  --clr-light: 231 77% 90%;\n  --clr-white: 0 0% 100%;\n  // font sizes\n  --fs-900: 9.375rem;\n  --fs-800: 6.25rem;\n  --fs-700: 3.5rem;\n  --fs-500: 2rem;\n  --fs-400: 1.75rem;\n  --fs-300: 1rem;\n  --fs-200: 0.875rem;\n  --scrollbar-width: 0px;\n  --header-height: 80px;\n  --sec-margin: 100px;\n  --sec-padding: 50px;\n  --content-padding-top: 50px;\n  --word-spacing: 2px;\n  --md-box-shadow1: #8f8e8e26 2px 2px 5px 0px;\n  --md-box-shadow2: #8f8e8e26 2px 2px 8px 3px;\n  --box-shadow-light: 0px 3.4px 3.2px #8f8e8e26;\n}\n//\n\n// snippets\n\n%secTitle {\n  font-weight: 600;\n  font-size: var(--fs-600);\n  color: hsl(var(--clr-dark) / 1);\n  .count {\n    color: hsl(var(--clr-dark) / 0.8);\n  }\n}\n\n%posFixedTL {\n  position: fixed;\n  top: 0;\n  left: 0;\n}\n\n%posAbs {\n  position: absolute;\n  top: 0;\n  left: 0;\n}\n\n%fullscreen {\n  height: 100vh;\n  width: 100vw;\n}\n\n%fadeConfig {\n  opacity: 0;\n  transition: opacity 250ms ease;\n}\n\n%custom-button {\n  display: block;\n  margin: 20px auto;\n  padding: 10px 15px;\n  font-size: var(--fs-400);\n  font-weight: 600;\n  position: relative;\n  overflow: hidden;\n  cursor: pointer;\n  transition: color 200ms ease, background-color 200ms ease-out;\n  border: none;\n}\n","@charset 'utf-8';\n@import \"./base/breakpoints.scss\";\n@import \"./base/reset.scss\";\n@import \"./variables/vars.scss\";\n\n@font-face {\n  font-family: \"Kalam\";\n  src: url(./Kalam-Regular.woff);\n}\n\nhtml {\n  scroll-padding-top: var(--header-height);\n}\n\nbody {\n  font-family: \"Kalam\", \"Segoe UI\", Roboto, \"Helvetica Neue\", \"Noto Sans\",\n    \"Liberation Sans\", Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\",\n    \"Segoe UI Symbol\", \"Noto Color Emoji\";\n\n  font-size: var(--fs-500);\n}\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, \"Courier New\",\n    monospace;\n}\n\n/************************/\n/*      UTILITY        */\n/**********************/\n\n// Screen Reader\n.sr-only {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  margin: -1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  border: 0;\n}\n\n// loading\n.ldr {\n  @extend %fullscreen;\n  @extend %posFixedTL;\n  z-index: 12;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: hsl(var(--clr-white) / 1);\n  svg {\n    height: 100px;\n    width: 100px;\n    path {\n      stroke-linecap: round;\n      stroke: hsl(var(--clr-dark) / 1);\n    }\n    .ltr {\n      opacity: 0.04;\n    }\n  }\n  .test-hack {\n    position: fixed;\n    color: transparent;\n  }\n}\n\n// root\n\n#root {\n  word-spacing: var(--word-spacing);\n  line-height: 1.5;\n  font-size: var(--fs-400);\n\n  position: relative;\n  overflow: hidden;\n\n  // &::-webkit-scrollbar {\n  //   width: $scrollbar-width;\n  // }\n  // &::-webkit-scrollbar-track {\n  //   background-color: hsl(var(--clr-dark) / 0.1);\n  // }\n  // &::-webkit-scrollbar-track-piece {\n  //   background-color: hsl(var(--clr-dark) / 0.1);\n  // }\n  // &::-webkit-scrollbar-thumb {\n  //   background-color: hsl(var(--clr-dark) / 1);\n  // }\n\n  // selection\n  ::-moz-selection {\n    background-color: hsl(var(--clr-dark) / 0.7);\n    color: hsl(var(--clr-white) / 1);\n  }\n\n  ::selection {\n    background-color: hsl(var(--clr-dark) / 0.7);\n    color: hsl(var(--clr-white) / 1);\n  }\n}\n// container\n.container {\n  margin: 0 auto;\n  @include media(\"<=phone\") {\n    width: 100%;\n  }\n  @include media(\">phone\", \"<=tablet\") {\n    width: 90%;\n  }\n  @include media(\">tablet\") {\n    width: 80%;\n  }\n}\n\n// haader\n\nheader {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: var(--header-height);\n  z-index: 10;\n  background-color: hsl(var(--clr-white) / 0.8);\n  backdrop-filter: blur(10px);\n  box-shadow: var(--md-box-shadow2);\n\n  .container {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 10px 0px;\n    & > .lnk {\n      display: block;\n      svg {\n        stroke: hsl(var(--clr-dark) / 1);\n      }\n    }\n    .lnks {\n      display: flex;\n      align-items: center;\n      visibility: hidden;\n      width: 0;\n\n      .lnk {\n        display: inline-block;\n        visibility: hidden;\n        text-decoration: none;\n        margin: 0 20px;\n        padding: 5px 0;\n        transition: color 300ms ease;\n        transform: translateY(-280%);\n        color: hsl(var(--clr-dark) / 0.7);\n        font-size: var(--fs-400);\n        font-weight: 600;\n        position: relative;\n        overflow: hidden;\n        &::after {\n          content: \"\";\n          position: absolute;\n          width: 100%;\n          height: 2px;\n          bottom: 4px;\n          left: 0%;\n          transform: translateX(-100%);\n          background-color: hsl(var(--clr-dark) / 0.5);\n          transition: transform 700ms ease;\n        }\n\n        &:hover {\n          color: hsl(var(--clr-dark) / 1);\n          &::after {\n            transform: translateX(0%);\n          }\n        }\n      }\n    }\n\n    @include media(\">tablet\") {\n      .lnks {\n        visibility: visible;\n        width: auto;\n        .lnk {\n          visibility: visible;\n        }\n      }\n    }\n  }\n}\n// hamburger button\n.hmb {\n  $base: hsl(var(--clr-dark) / 0.6);\n  display: block;\n  height: 40px;\n  width: 40px;\n  // outline: 1px solid black;\n  line-height: 2.4em;\n  cursor: pointer;\n  transition: color 450ms ease;\n  position: fixed;\n  right: 0%;\n  top: 50%;\n  z-index: 4;\n  transform: translate(100px, -50%);\n  span {\n    display: inline-block;\n    height: 2px;\n    width: 35px;\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%);\n    &::before,\n    &::after {\n      @extend %posAbs;\n      content: \"\";\n      height: 2px;\n      width: 35px;\n      background-color: $base;\n      transition: transform 400ms ease;\n    }\n    &::before {\n      transform: translateY(-4px);\n    }\n\n    &::after {\n      transform: translateY(4px);\n    }\n    &:hover {\n      &::before,\n      &::after {\n        background-color: hsl(var(--clr-dark) / 0.7);\n      }\n    }\n  }\n  // animation  or style for close button\n  &.op {\n    border: 2px solid hsl(var(--clr-dark) / 0.9);\n    border-radius: 50%;\n    span {\n      &::before,\n      &::after {\n        background-color: hsl(var(--clr-dark) / 0.9);\n      }\n      &::after {\n        transform: rotate(45deg);\n      }\n      &::before {\n        transform: rotate(-45deg);\n      }\n    }\n  }\n\n  @include media(\">tablet\") {\n    display: none;\n    visibility: hidden;\n  }\n}\n\n// dropdown navigation\n.bkd {\n  position: fixed;\n  right: 0;\n  padding: 20px 40px;\n  width: 100%;\n  z-index: 3;\n  background-color: hsl(var(--clr-white) / 0.8);\n  backdrop-filter: blur(10px);\n  transition: opacity 100ms, transform 100ms ease-in-out,\n    height 250ms cubic-bezier(0.08, 0.54, 0.14, 0.78);\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n\n  transform: translateY(-100%) scaleY(0);\n  padding-top: var(--header-height);\n  box-shadow: var(--md-box-shadow2);\n\n  &.op {\n    transform: translateY(0%) scaleY(1);\n    height: 50vh;\n  }\n  .rvc {\n    overflow: hidden;\n\n    a.n-lnk {\n      display: block;\n      font-size: var(--fs-500);\n      transform: translateY(-10vh);\n      text-decoration: none;\n      color: hsl(var(--clr-dark) / 0.8);\n      &:hover {\n        color: hsl(var(--clr-dark) / 1);\n      }\n    }\n    &:first-child {\n      margin-top: 40px;\n    }\n  }\n\n  @include media(\">tablet\") {\n    display: none;\n    visibility: hidden;\n  }\n}\n\n// hero\n.hero {\n  padding-top: 100px;\n  height: 100vh;\n  position: relative;\n  overflow: hidden;\n  color: hsl(var(--clr-dark) / 0.8);\n\n  .rvc {\n    overflow: hidden;\n    height: max-content;\n    padding: 3px 0;\n    .wel,\n    .grt,\n    .nam,\n    .pass,\n    .msg {\n      transform: translateY(150%);\n      font-weight: 600;\n    }\n\n    .grt,\n    .wel {\n      font-size: var(--fs-500);\n      height: 2.4rem;\n    }\n  }\n}\n\n.nam,\n.pass {\n  font-size: clamp(var(--fs-500), 8vw, var(--fs-600));\n  text-transform: uppercase;\n}\n\n.msg {\n  margin: 30px 0;\n  max-width: 500px;\n  word-wrap: break-word;\n  // color: hsl(var(--clr-dark) / 1);\n  font-weight: 500;\n}\n\n// About\n.abt {\n  margin-top: var(--sec-margin);\n  &-ttl {\n    @extend %secTitle;\n  }\n  &-wrp {\n    $mt: 30px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    overflow: hidden;\n    &-t {\n      word-wrap: break-word;\n      .t {\n        margin-top: $mt;\n      }\n      blockquote.t {\n        // color: hsl(var(--clr-dark) / 1);\n        margin: 10px 0;\n        &::before {\n          content: ' \" ';\n        }\n        &::after {\n          content: ' \" ';\n        }\n      }\n    }\n    &-i {\n      margin-top: $mt;\n      width: 400px;\n      height: 450px;\n      position: relative;\n      img {\n        object-fit: cover;\n        filter: grayscale(1);\n        display: block;\n        margin: 0 auto;\n        border-radius: 15px;\n        transition: filter 350ms ease;\n        // box-shadow: var(--md-box-shadow1);\n        &:hover {\n          filter: grayscale(0.8);\n          // box-shadow: var(--md-box-shadow2);\n        }\n      }\n    }\n\n    @include media(\">tablet\") {\n      flex-direction: row;\n      justify-content: space-between;\n      align-items: flex-start;\n      &-t {\n        flex: 1;\n      }\n      &-i {\n        width: 350px;\n      }\n    }\n  }\n}\n\n// techfolio\n.tf {\n  margin-top: var(--sec-margin);\n  &-t {\n    @extend %secTitle;\n    margin-bottom: var(--content-padding-top);\n  }\n  .techs {\n    width: 100%;\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(var(--box-size), 1fr));\n    gap: calc(var(--box-size) / 2);\n    .tf-itm {\n      width: var(--box-size);\n      margin: 10px;\n      display: block;\n      filter: grayscale(1);\n      transition: filter 200ms ease;\n      cursor: crosshair;\n      &-i {\n        object-fit: cover;\n        display: block;\n        margin: 5px 0;\n      }\n      &:hover {\n        filter: none;\n      }\n\n      .prg {\n        height: 8px;\n        width: var(--box-size);\n        border-radius: 5px;\n        background-color: hsl(var(--clr-dark) / 0.2);\n        margin: 5px 0;\n        &-val {\n          border-radius: 5px;\n          height: 100%;\n          width: 100%;\n          background-color: hsl(var(--clr-dark) / 0.8);\n        }\n      }\n    }\n  }\n}\n// styled buttons\n\n.button-outlined {\n  @extend %custom-button;\n  background-color: hsl(var(--clr-white) / 0.9);\n  color: hsl(var(--clr-dark) / 0.9);\n  outline: 2px solid currentColor;\n\n  &:hover {\n    background-color: hsl(var(--clr-dark) / 1);\n    color: hsl(var(--clr-white) / 1);\n  }\n}\n\n// Major projects\n\n.mjr {\n  margin-top: var(--sec-margin);\n  &-t {\n    @extend %secTitle;\n    margin-bottom: var(--content-padding-top);\n\n    .count {\n      color: hsl(var(--clr-dark) / 0.8);\n    }\n  }\n}\n.mjr-wrp {\n  position: relative;\n  overflow: hidden;\n  margin-top: var(--content-padding-top);\n  transition: box-shadow 200ms ease;\n  box-shadow: var(--md-box-shadow1);\n  .mjr-i {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    img {\n      transition: filter 700ms cubic-bezier(0.36, 0.38, 0.38, 0.92);\n      filter: grayscale(1);\n    }\n  }\n\n  .mjr-cont {\n    background: hsl(var(--clr-white) / 0.999);\n    opacity: 0.96 !important;\n    padding: 10px;\n    h2 {\n      font-size: var(--fs-500);\n      font-weight: 600;\n      color: hsl(var(--clr-dark) / 1);\n    }\n    .feat {\n      color: hsl(var(--clr-dark) / 0.9);\n      font-size: var(--fs-400);\n      font-weight: 600;\n    }\n    .tgs {\n      display: flex;\n      flex-wrap: wrap;\n      span {\n        background-color: hsl(var(--clr-dark) / 0.05);\n        padding: 5px;\n        margin: 5px 15px 5px 0;\n        color: hsl(var(--clr-dark) / 1);\n      }\n    }\n    .brf {\n      // font-size: 1.3rem;\n      margin-top: 30px;\n      padding: 10px;\n      background-color: hsl(var(--clr-light) / 0.1);\n    }\n    .lnks {\n      justify-content: flex-start;\n      margin-top: 30px;\n      a svg {\n        fill: hsl(var(--clr-dark) / 0.7);\n        transition: fill 200ms;\n        &:hover {\n          fill: hsl(var(--clr-dark) / 0.9);\n        }\n      }\n    }\n  }\n\n  &:hover {\n    box-shadow: var(--md-box-shadow2);\n    .mjr-i {\n      img {\n        filter: grayscale(0.3);\n      }\n    }\n  }\n  @include media(\">desktop\") {\n    &.lt {\n      .mjr-i {\n        width: 50%;\n        height: 100%;\n        right: 5px;\n        top: 5px;\n\n        img {\n          width: 100%;\n          object-fit: cover;\n        }\n      }\n\n      .mjr-cont {\n        width: 50%;\n      }\n    }\n    &.rt {\n      .mjr-i {\n        left: 5px;\n        top: 5px;\n        width: 50%;\n\n        img {\n          width: 100%;\n          object-fit: cover;\n        }\n      }\n\n      .mjr-cont {\n        float: right;\n        text-align: right;\n        width: 50%;\n        .lnks {\n          justify-content: flex-end;\n        }\n      }\n    }\n  }\n}\n\n// Mini Projects\n.mini {\n  margin-top: var(--sec-margin);\n  &-t {\n    @extend %secTitle;\n    margin-bottom: var(--sec-padding);\n  }\n\n  .cc {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n    grid-auto-rows: max-content;\n    gap: 20px;\n    position: relative;\n    .crd {\n      padding: 20px;\n      height: 100%;\n      display: flex;\n      flex-direction: column;\n      justify-content: space-between;\n\n      background-color: hsl(var(--clr-light) / 0.05);\n      box-shadow: var(--md-box-shadow1);\n      position: relative;\n      transform: translateY(0);\n      transition: background-color 300ms ease, transform 500ms ease,\n        opacity 1000ms;\n      &-h {\n        display: flex;\n        justify-content: space-between;\n        border-bottom: 1px solid hsl(var(--clr-dark) / 0.2);\n        .fi {\n          color: hsl(var(--clr-dark) / 0.6);\n        }\n\n        a {\n          color: hsl(var(--clr-dark) / 0.6);\n          &:hover {\n            color: hsl(var(--clr-dark) / 0.8);\n          }\n        }\n      }\n      &-b {\n        padding: 10px 0;\n        h2 {\n          color: hsl(var(--clr-dark) / 0.8);\n          font-size: var(--fs-500);\n        }\n      }\n      &-brf {\n        font-size: var(--fs-400);\n        margin: 15px 0;\n      }\n      &-f {\n        justify-self: flex-end;\n\n        span {\n          background-color: hsl(var(--clr-dark) / 0.05);\n          color: hsl(var(--clr-dark) / 1);\n          padding: 5px 10px;\n          border-radius: 5px;\n          display: inline-block;\n          margin: 5px 15px 0 0;\n          font-size: var(--fs-300);\n        }\n      }\n\n      &:hover {\n        transform: translateY(-4px);\n        background-color: hsl(var(--clr-light) / 0.1);\n        box-shadow: var(--md-box-shadow2);\n\n        .fi {\n          color: hsl(var(--clr-dark) / 0.7);\n        }\n      }\n    }\n  }\n}\n\n// contact\n.cnnt {\n  margin-top: var(--sec-margin);\n\n  &-t {\n    @extend %secTitle;\n    margin-bottom: var(--sec-padding);\n  }\n\n  &-body {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: flex-start;\n  }\n\n  &-m {\n    font-size: var(--fs-400);\n    line-height: 1.5;\n  }\n  &-b {\n    @extend %custom-button;\n    width: fit-content;\n    text-align: center;\n    font-weight: 500;\n    text-decoration: none;\n    background-color: hsl(var(--clr-dark) / 0.9);\n    color: hsl(var(--clr-white) / 1);\n    // outline: 2px solid hsl(var(--clr-dark) / 0.9);\n    transition: transform 100ms;\n    &:hover {\n      $bg: hsl(var(--clr-dark) / 1);\n      background-color: hsl(var(--clr-white) / 1);\n      color: $bg;\n      outline: 2px solid $bg;\n      transform: scale(0.97);\n    }\n  }\n\n  @include media(\">=tablet\") {\n    &-body {\n      flex-direction: row;\n      justify-content: space-between;\n      align-items: center;\n    }\n    &-m {\n      flex: 1;\n    }\n  }\n}\n\n// Footer\n\n.ftr-wrp {\n  margin-top: var(--sec-margin);\n  box-shadow: var(--md-box-shadow1);\n\n  background-color: hsl(var(--clr-dark) / 1);\n\n  footer {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    color: hsl(var(--clr-white) / 1);\n    padding: 15px 0;\n    svg {\n      margin: 15px;\n    }\n  }\n  .soc {\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    a {\n      color: hsl(var(--clr-white) / 0.7);\n\n      &:hover {\n        color: hsl(var(--clr-white) / 1);\n      }\n    }\n  }\n\n  @include media(\">tablet\") {\n    footer {\n      flex-direction: row;\n      justify-content: space-between;\n    }\n    .soc {\n      justify-content: flex-start;\n      width: 50%;\n    }\n\n    .inf {\n      width: 50%;\n      text-align: right;\n    }\n  }\n}\n// intersection observer\n.obs {\n  @extend %fadeConfig;\n}\n","@charset \"UTF-8\";\n\n//     _            _           _                           _ _\n//    (_)          | |         | |                         | (_)\n//     _ _ __   ___| |_   _  __| | ___   _ __ ___   ___  __| |_  __ _\n//    | | '_ \\ / __| | | | |/ _` |/ _ \\ | '_ ` _ \\ / _ \\/ _` | |/ _` |\n//    | | | | | (__| | |_| | (_| |  __/ | | | | | |  __/ (_| | | (_| |\n//    |_|_| |_|\\___|_|\\__,_|\\__,_|\\___| |_| |_| |_|\\___|\\__,_|_|\\__,_|\n//\n//      Simple, elegant and maintainable media queries in Sass\n//                        v1.4.9\n//\n//        https://eduardoboucas.github.io/include-media\n//\n//         Authors: Eduardo Boucas (@eduardoboucas)\n//                  Kitty Giraudel (@kittygiraudel)\n//\n//      This project is licensed under the terms of the MIT license\n////\n/// include-media library public configuration\n/// @author Eduardo Boucas\n/// @access public\n////\n\n///\n/// Creates a list of global breakpoints\n///\n/// @example scss - Creates a single breakpoint with the label `phone`\n///  $breakpoints: ('phone': 320px);\n///\n$breakpoints: (\n  \"phone\": 320px,\n  \"tablet\": 768px,\n  \"desktop\": 1024px,\n) !default;\n\n///\n/// Creates a list of static expressions or media types\n///\n/// @example scss - Creates a single media type (screen)\n///  $media-expressions: ('screen': 'screen');\n///\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\n///  $media-expressions: (\n///    'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)'\n///  );\n///\n$media-expressions: (\n  \"screen\": \"screen\",\n  \"print\": \"print\",\n  \"handheld\": \"handheld\",\n  \"landscape\": \"(orientation: landscape)\",\n  \"portrait\": \"(orientation: portrait)\",\n  \"retina2x\":\n    \"(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)\",\n  \"retina3x\":\n    \"(-webkit-min-device-pixel-ratio: 3), (min-resolution: 350dpi), (min-resolution: 3dppx)\",\n) !default;\n\n///\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\n///\n/// @example scss - Interval for pixels is defined as `1` by default\n///  @include media('>128px') {}\n///\n///  /* Generates: */\n///  @media (min-width: 129px) {}\n///\n/// @example scss - Interval for ems is defined as `0.01` by default\n///  @include media('>20em') {}\n///\n///  /* Generates: */\n///  @media (min-width: 20.01em) {}\n///\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\n///  @include media('>2.0rem') {}\n///\n///  /* Generates: */\n///  @media (min-width: 2.1rem) {}\n///\n$unit-intervals: (\n  \"px\": 1,\n  \"em\": 0.01,\n  \"rem\": 0.1,\n  \"\": 0,\n) !default;\n\n///\n/// Defines whether support for media queries is available, useful for creating separate stylesheets\n/// for browsers that don't support media queries.\n///\n/// @example scss - Disables support for media queries\n///  $im-media-support: false;\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n$im-media-support: true !default;\n\n///\n/// Selects which breakpoint to emulate when support for media queries is disabled. Media queries that start at or\n/// intercept the breakpoint will be displayed, any others will be ignored.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n/// @example scss - This media query will NOT show because it does not intercept the desktop breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'tablet';\n///  @include media('>=desktop') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-breakpoint: \"desktop\" !default;\n\n///\n/// Selects which media expressions are allowed in an expression for it to be used when media queries\n/// are not supported.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint and contains only accepted media expressions\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'screen') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///   /* Generates: */\n///   .foo {\n///     color: tomato;\n///   }\n///\n/// @example scss - This media query will NOT show because it intercepts the static breakpoint but contains a media expression that is not accepted\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'retina2x') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-expressions: (\"screen\", \"portrait\", \"landscape\") !default;\n\n////\n/// Cross-engine logging engine\n/// @author Kitty Giraudel\n/// @access private\n////\n\n///\n/// Log a message either with `@error` if supported\n/// else with `@warn`, using `feature-exists('at-error')`\n/// to detect support.\n///\n/// @param {String} $message - Message to log\n///\n@function im-log($message) {\n  @if feature-exists(\"at-error\") {\n    @error $message;\n  } @else {\n    @warn $message;\n    $_: noop();\n  }\n\n  @return $message;\n}\n\n///\n/// Wrapper mixin for the log function so it can be used with a more friendly\n/// API than `@if im-log('..') {}` or `$_: im-log('..')`. Basically, use the function\n/// within functions because it is not possible to include a mixin in a function\n/// and use the mixin everywhere else because it's much more elegant.\n///\n/// @param {String} $message - Message to log\n///\n@mixin log($message) {\n  @if im-log($message) {\n  }\n}\n\n///\n/// Function with no `@return` called next to `@warn` in Sass 3.3\n/// to trigger a compiling error and stop the process.\n///\n@function noop() {\n}\n\n///\n/// Determines whether a list of conditions is intercepted by the static breakpoint.\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @return {Boolean} - Returns true if the conditions are intercepted by the static breakpoint\n///\n@function im-intercepts-static-breakpoint($conditions...) {\n  $no-media-breakpoint-value: map-get($breakpoints, $im-no-media-breakpoint);\n\n  @if not $no-media-breakpoint-value {\n    @if im-log(\"`#{$im-no-media-breakpoint}` is not a valid breakpoint.\") {\n    }\n  }\n\n  @each $condition in $conditions {\n    @if not map-has-key($media-expressions, $condition) {\n      $operator: get-expression-operator($condition);\n      $prefix: get-expression-prefix($operator);\n      $value: get-expression-value($condition, $operator);\n\n      @if ($prefix == \"max\" and $value <= $no-media-breakpoint-value) or\n        ($prefix == \"min\" and $value > $no-media-breakpoint-value)\n      {\n        @return false;\n      }\n    } @else if not index($im-no-media-expressions, $condition) {\n      @return false;\n    }\n  }\n\n  @return true;\n}\n\n////\n/// Parsing engine\n/// @author Kitty Giraudel\n/// @access private\n////\n\n///\n/// Get operator of an expression\n///\n/// @param {String} $expression - Expression to extract operator from\n///\n/// @return {String} - Any of `>=`, `>`, `<=`, `<`, `≥`, `≤`\n///\n@function get-expression-operator($expression) {\n  @each $operator in (\">=\", \">\", \"<=\", \"<\", \"≥\", \"≤\") {\n    @if str-index($expression, $operator) {\n      @return $operator;\n    }\n  }\n\n  // It is not possible to include a mixin inside a function, so we have to\n  // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n  // functions cannot be called anywhere in Sass, we need to hack the call in\n  // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n  // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n  $_: im-log(\"No operator found in `#{$expression}`.\");\n}\n\n///\n/// Get dimension of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract dimension from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {String} - `width` or `height` (or potentially anything else)\n///\n@function get-expression-dimension($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $parsed-dimension: str-slice($expression, 0, $operator-index - 1);\n  $dimension: \"width\";\n\n  @if str-length($parsed-dimension) > 0 {\n    $dimension: $parsed-dimension;\n  }\n\n  @return $dimension;\n}\n\n///\n/// Get dimension prefix based on an operator\n///\n/// @param {String} $operator - Operator\n///\n/// @return {String} - `min` or `max`\n///\n@function get-expression-prefix($operator) {\n  @return if(index((\"<\", \"<=\", \"≤\"), $operator), \"max\", \"min\");\n}\n\n///\n/// Get value of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract value from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {Number} - A numeric value\n///\n@function get-expression-value($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $value: str-slice($expression, $operator-index + str-length($operator));\n\n  @if map-has-key($breakpoints, $value) {\n    $value: map-get($breakpoints, $value);\n  } @else {\n    $value: to-number($value);\n  }\n\n  $interval: map-get($unit-intervals, unit($value));\n\n  @if not $interval {\n    // It is not possible to include a mixin inside a function, so we have to\n    // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n    // functions cannot be called anywhere in Sass, we need to hack the call in\n    // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n    // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n    $_: im-log(\"Unknown unit `#{unit($value)}`.\");\n  }\n\n  @if $operator == \">\" {\n    $value: $value + $interval;\n  } @else if $operator == \"<\" {\n    $value: $value - $interval;\n  }\n\n  @return $value;\n}\n\n///\n/// Parse an expression to return a valid media-query expression\n///\n/// @param {String} $expression - Expression to parse\n///\n/// @return {String} - Valid media query\n///\n@function parse-expression($expression) {\n  // If it is part of $media-expressions, it has no operator\n  // then there is no need to go any further, just return the value\n  @if map-has-key($media-expressions, $expression) {\n    @return map-get($media-expressions, $expression);\n  }\n\n  $operator: get-expression-operator($expression);\n  $dimension: get-expression-dimension($expression, $operator);\n  $prefix: get-expression-prefix($operator);\n  $value: get-expression-value($expression, $operator);\n\n  @return \"(#{$prefix}-#{$dimension}: #{$value})\";\n}\n\n///\n/// Slice `$list` between `$start` and `$end` indexes\n///\n/// @access private\n///\n/// @param {List} $list - List to slice\n/// @param {Number} $start [1] - Start index\n/// @param {Number} $end [length($list)] - End index\n///\n/// @return {List} Sliced list\n///\n@function slice($list, $start: 1, $end: length($list)) {\n  @if length($list) < 1 or $start > $end {\n    @return ();\n  }\n\n  $result: ();\n\n  @for $i from $start through $end {\n    $result: append($result, nth($list, $i));\n  }\n\n  @return $result;\n}\n\n////\n/// String to number converter\n/// @author Kitty Giraudel\n/// @access private\n////\n\n///\n/// Casts a string into a number\n///\n/// @param {String | Number} $value - Value to be parsed\n///\n/// @return {Number}\n///\n@function to-number($value) {\n  @if type-of($value) == \"number\" {\n    @return $value;\n  } @else if type-of($value) != \"string\" {\n    $_: im-log(\"Value for `to-number` should be a number or a string.\");\n  }\n\n  $first-character: str-slice($value, 1, 1);\n  $result: 0;\n  $digits: 0;\n  $minus: ($first-character == \"-\");\n  $numbers: (\n    \"0\": 0,\n    \"1\": 1,\n    \"2\": 2,\n    \"3\": 3,\n    \"4\": 4,\n    \"5\": 5,\n    \"6\": 6,\n    \"7\": 7,\n    \"8\": 8,\n    \"9\": 9,\n  );\n\n  // Remove +/- sign if present at first character\n  @if ($first-character == \"+\" or $first-character == \"-\") {\n    $value: str-slice($value, 2);\n  }\n\n  @for $i from 1 through str-length($value) {\n    $character: str-slice($value, $i, $i);\n\n    @if not(index(map-keys($numbers), $character) or $character == \".\") {\n      @return to-length(if($minus, -$result, $result), str-slice($value, $i));\n    }\n\n    @if $character == \".\" {\n      $digits: 1;\n    } @else if $digits == 0 {\n      $result: $result * 10 + map-get($numbers, $character);\n    } @else {\n      $digits: $digits * 10;\n      $result: $result + map-get($numbers, $character) / $digits;\n    }\n  }\n\n  @return if($minus, -$result, $result);\n}\n\n///\n/// Add `$unit` to `$value`\n///\n/// @param {Number} $value - Value to add unit to\n/// @param {String} $unit - String representation of the unit\n///\n/// @return {Number} - `$value` expressed in `$unit`\n///\n@function to-length($value, $unit) {\n  $units: (\n    \"px\": 1px,\n    \"cm\": 1cm,\n    \"mm\": 1mm,\n    \"%\": 1%,\n    \"ch\": 1ch,\n    \"pc\": 1pc,\n    \"in\": 1in,\n    \"em\": 1em,\n    \"rem\": 1rem,\n    \"pt\": 1pt,\n    \"ex\": 1ex,\n    \"vw\": 1vw,\n    \"vh\": 1vh,\n    \"vmin\": 1vmin,\n    \"vmax\": 1vmax,\n  );\n\n  @if not index(map-keys($units), $unit) {\n    $_: im-log(\"Invalid unit `#{$unit}`.\");\n  }\n\n  @return $value * map-get($units, $unit);\n}\n\n///\n/// This mixin aims at redefining the configuration just for the scope of\n/// the call. It is helpful when having a component needing an extended\n/// configuration such as custom breakpoints (referred to as tweakpoints)\n/// for instance.\n///\n/// @author Kitty Giraudel\n///\n/// @param {Map} $tweakpoints [()] - Map of tweakpoints to be merged with `$breakpoints`\n/// @param {Map} $tweak-media-expressions [()] - Map of tweaked media expressions to be merged with `$media-expression`\n///\n/// @example scss - Extend the global breakpoints with a tweakpoint\n///  @include media-context(('custom': 678px)) {\n///    .foo {\n///      @include media('>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend the global media expressions with a custom one\n///  @include media-context($tweak-media-expressions: ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend both configuration maps\n///  @include media-context(('custom': 678px), ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n@mixin media-context($tweakpoints: (), $tweak-media-expressions: ()) {\n  // Save global configuration\n  $global-breakpoints: $breakpoints;\n  $global-media-expressions: $media-expressions;\n\n  // Update global configuration\n  $breakpoints: map-merge($breakpoints, $tweakpoints) !global;\n  $media-expressions: map-merge(\n    $media-expressions,\n    $tweak-media-expressions\n  ) !global;\n\n  @content;\n\n  // Restore global configuration\n  $breakpoints: $global-breakpoints !global;\n  $media-expressions: $global-media-expressions !global;\n}\n\n////\n/// include-media public exposed API\n/// @author Eduardo Boucas\n/// @access public\n////\n\n///\n/// Generates a media query based on a list of conditions\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @example scss - With a single set breakpoint\n///  @include media('>phone') { }\n///\n/// @example scss - With two set breakpoints\n///  @include media('>phone', '<=tablet') { }\n///\n/// @example scss - With custom values\n///  @include media('>=358px', '<850px') { }\n///\n/// @example scss - With set breakpoints with custom values\n///  @include media('>desktop', '<=1350px') { }\n///\n/// @example scss - With a static expression\n///  @include media('retina2x') { }\n///\n/// @example scss - Mixing everything\n///  @include media('>=350px', '<tablet', 'retina3x') { }\n///\n@mixin media($conditions...) {\n  @if ($im-media-support and length($conditions) == 0) or\n    (not $im-media-support and im-intercepts-static-breakpoint($conditions...))\n  {\n    @content;\n  } @else if ($im-media-support and length($conditions) > 0) {\n    @media #{unquote(parse-expression(nth($conditions, 1)))} {\n      // Recursive call\n      @include media(slice($conditions, 2)...) {\n        @content;\n      }\n    }\n  }\n}\n"],"names":[],"sourceRoot":""}